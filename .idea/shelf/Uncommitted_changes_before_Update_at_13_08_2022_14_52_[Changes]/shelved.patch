Index: TradingSupportApp/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TradingSupportApp/forms.py b/TradingSupportApp/forms.py
--- a/TradingSupportApp/forms.py	
+++ b/TradingSupportApp/forms.py	
@@ -44,11 +44,42 @@
 
 
 class FilterForm(forms.Form):
-    name_choices = [(i['symbol'], i['symbol']) for i in Company.objects.filter(wanted=True).values('symbol').distinct()]
-    symbol = forms.TypedChoiceField(choices=name_choices)
+    # name_choices = [(i['symbol'], i['symbol']) for i in Company.objects.filter(wanted=True).values('symbol').distinct()]
+    symbol = forms.TypedChoiceField()
+
+    def __init__(self, *args, **kwargs):
+        super(FilterForm, self).__init__(*args, **kwargs)
+        print(args)
+        print(kwargs)
+        unwantedCompanies = UnwantedCompanies.objects.filter(user=args[1].username).values('symbol').distinct()
+        companies = []
+        for symbol in Company.objects.all().values('symbol').distinct():
+            if symbol not in unwantedCompanies:
+                companies.append(symbol)
+        self.fields['symbol'] = forms.TypedChoiceField(
+            choices=[(i['symbol'], i['symbol']) for i in companies])
+
+
+    """def __init__(self, *args, **kwargs):
+        super().__init__(*args, **kwargs)
+        user = self.kwargs.get('user')
+        if user:
+            unwantedCompanies=UnwantedCompanies.objects.filter(user=user.userame).values('symbol').distinct()
+            companies=[]
+            for company in Company.objects.all():
+                if company.symbol not in  unwantedCompanies:
+                    companies.append(company.symbol)
+            self.fields['symbol'].queryset = companies"""
 
 
 class UnFilterForm(forms.Form):
-    name_choices = [(i['symbol'], i['symbol']) for i in
-                    Company.objects.filter(wanted=False).values('symbol').distinct()]
-    symbol = forms.TypedChoiceField(choices=name_choices)
+    #name_choices = [(i['symbol'], i['symbol']) for i in
+                    #UnwantedCompanies.objects.all().values('symbol').distinct()]
+    symbol = forms.TypedChoiceField()
+    def __init__(self, *args, **kwargs):
+        super(UnFilterForm, self).__init__(*args, **kwargs)
+        print(args)
+        print(kwargs)
+        unwantedCompanies = UnwantedCompanies.objects.filter(user=args[1].username).values('symbol').distinct()
+        self.fields['symbol'] = forms.TypedChoiceField(
+            choices=[(i['symbol'], i['symbol']) for i in unwantedCompanies])
\ No newline at end of file
Index: TradingSupport/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TradingSupport/urls.py b/TradingSupport/urls.py
--- a/TradingSupport/urls.py	
+++ b/TradingSupport/urls.py	
@@ -13,6 +13,7 @@
     1. Import the include() function: from django.urls import include, path
     2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
 """
+from TradingSupportApp import views
 from django.contrib import admin
 from django.urls import path,include
 from django.views.generic.base import TemplateView
@@ -20,5 +21,5 @@
     path('admin/', admin.site.urls),
     path('TradingSupportApp/', include('TradingSupportApp.urls')),
     path("accounts/", include("django.contrib.auth.urls")),
-    path('', TemplateView.as_view(template_name='TradingSupportApp/mainpage.html'), name='userInterface'),
+    path('', views.mainpage, name='mainpage'),
 ]
Index: TradingSupportApp/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TradingSupportApp/models.py b/TradingSupportApp/models.py
--- a/TradingSupportApp/models.py	
+++ b/TradingSupportApp/models.py	
@@ -7,6 +7,12 @@
     wanted = models.BooleanField(default=True)
 
 
+class UnwantedCompanies(models.Model):
+    symbol = models.CharField(max_length=10)
+    wanted = models.BooleanField(default=False)
+    user = models.CharField(max_length=30)
+
+
 class Indexes(models.Model):
     name = models.CharField(max_length=10)
     value = models.CharField(max_length=10)
Index: TradingSupportApp/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TradingSupportApp/urls.py b/TradingSupportApp/urls.py
--- a/TradingSupportApp/urls.py	
+++ b/TradingSupportApp/urls.py	
@@ -4,7 +4,7 @@
 from . import views
 
 urlpatterns = [
-    path('homepage', views.homepage, name='homepage'),
+    path('login', views.homepage, name='login'),
     path('mainpage', views.mainpage, name='mainpage'),
     path('registrationpage', views.registrationpage, name='registrationpage'),
     path('filtercompanies', views.filtercompanies, name='filtercompanies'),
Index: TradingSupportApp/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TradingSupportApp/views.py b/TradingSupportApp/views.py
--- a/TradingSupportApp/views.py	
+++ b/TradingSupportApp/views.py	
@@ -6,7 +6,7 @@
 
 from .FunctionsForDataExtraction import scrap_symbols
 from .forms import LoginForm, FilterForm, UnFilterForm
-from .models import Company
+from .models import Company, UnwantedCompanies
 # Create your views here.
 from .tasks import scrap
 
@@ -47,34 +47,42 @@
 
 def filtercompanies(request):
     # Company.objects.all().update(wanted=True)
+
     if request.method == 'POST':
-        form = FilterForm(request.POST)
-    else:
-        form = FilterForm()
-
-    if form.is_valid():
-        template = loader.get_template('TradingSupportApp/filtercompanies.html')
-        Company.objects.filter(symbol=form.cleaned_data['symbol']).update(wanted=False)
-        return render(request, 'TradingSupportApp/filtercompanies.html', {"form": FilterForm()})
+        form = FilterForm(request.POST,request.user)
+        if form.is_valid():
+            template = loader.get_template('TradingSupportApp/filtercompanies.html')
+            company = Company.objects.filter(symbol=form.cleaned_data['symbol'])
+            print(Company.objects.count())
+            unwantedCompany = UnwantedCompanies(UnwantedCompanies.objects.count(), form.cleaned_data['symbol'], False,
+                                                user=request.user.username)
+            unwantedCompany.save()
+            if Company.objects.filter(symbol=form.cleaned_data['symbol']).count() == 0:
+                return render(request, 'TradingSupportApp/filtercompanies.html',
+                              {"form": FilterForm(request.POST,request.user)})
+            return render(request, 'TradingSupportApp/filtercompanies.html',
+                          {"form": FilterForm(request.POST,request.user)})
     else:
-        template = loader.get_template('TradingSupportApp/filtercompanies.html')
-        return render(request, 'TradingSupportApp/filtercompanies.html', {"form": FilterForm()})
+        form = FilterForm(request.POST, request.user)
+
+    template = loader.get_template('TradingSupportApp/filtercompanies.html')
+    return render(request, 'TradingSupportApp/filtercompanies.html', {"form": FilterForm(request.POST,request.user)})
 
 
 def unfiltercompanies(request):
     # Company.objects.all().update(wanted=True)
     if request.method == 'POST':
-        form = UnFilterForm(request.POST)
+        form = UnFilterForm(request.POST,request.user)
     else:
-        form = UnFilterForm()
+        form = UnFilterForm(request.POST,request.user)
 
     if form.is_valid():
         template = loader.get_template('TradingSupportApp/unfiltercompanies.html')
-        Company.objects.filter(symbol=form.cleaned_data['symbol']).update(wanted=True)
-        return render(request, 'TradingSupportApp/unfiltercompanies.html', {"form": UnFilterForm()})
+        UnwantedCompanies.objects.filter(symbol=form.cleaned_data['symbol'],user=request.user).delete()
+        return render(request, 'TradingSupportApp/unfiltercompanies.html', {"form": UnFilterForm(request.POST,request.user)})
     else:
         template = loader.get_template('TradingSupportApp/unfiltercompanies.html')
-        return render(request, 'TradingSupportApp/unfiltercompanies.html', {"form": UnFilterForm()})
+        return render(request, 'TradingSupportApp/unfiltercompanies.html', {"form": UnFilterForm(request.POST,request.user)})
 
 
 def registrationpage(request):
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -3,7 +3,12 @@
   <component name="ChangeListManager">
     <list default="true" id="96f06cec-3d3d-46db-ba30-d1699e6f0f24" name="Changes" comment="creating filters, updating some stuff">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/TradingSupport/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/TradingSupport/urls.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/TradingSupportApp/forms.py" beforeDir="false" afterPath="$PROJECT_DIR$/TradingSupportApp/forms.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/TradingSupportApp/models.py" beforeDir="false" afterPath="$PROJECT_DIR$/TradingSupportApp/models.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/TradingSupportApp/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/TradingSupportApp/urls.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/TradingSupportApp/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/TradingSupportApp/views.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/db.sqlite3" beforeDir="false" afterPath="$PROJECT_DIR$/db.sqlite3" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -29,15 +34,15 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "DefaultHtmlFileTemplate": "HTML File",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "C:/Users/zibi-/Desktop/WebScraperProject/TradingSupportApp/templates/TradingSupportApp"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/zibi-/Desktop/WebScraperProject/TradingSupportApp/templates/TradingSupportApp&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\zibi-\Desktop\WebScraperProject\TradingSupportApp\templates\TradingSupportApp" />
@@ -81,6 +86,8 @@
       <workItem from="1660154561061" duration="5204000" />
       <workItem from="1660202985497" duration="1802000" />
       <workItem from="1660234600481" duration="945000" />
+      <workItem from="1660304978029" duration="31000" />
+      <workItem from="1660385329180" duration="7581000" />
     </task>
     <task id="LOCAL-00001" summary="database">
       <created>1660152578463</created>
@@ -124,7 +131,14 @@
       <option name="project" value="LOCAL" />
       <updated>1660303826582</updated>
     </task>
-    <option name="localTasksCounter" value="7" />
+    <task id="LOCAL-00007" summary="creating filters, updating some stuff">
+      <created>1660304652618</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1660304652618</updated>
+    </task>
+    <option name="localTasksCounter" value="8" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
